apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: edge-service-rollout
  labels:
    app: edge-service-rollout
spec:
  replicas: 1
  strategy:
    canary:
      # Reference to a Service which the controller will update to point to the canary ReplicaSet
      canaryService: edge-service-canary
      # Reference to a Service which the controller will update to point to the stable ReplicaSet
      stableService: edge-service-stable
      trafficRouting:
        nginx:
          # Reference to an Ingress which has a rule pointing to the stable service (e.g. rollouts-demo-stable)
          # This ingress will be cloned with a new name, in order to achieve NGINX traffic splitting.
          stableIngress: polar-bookshop-ingress
      steps:
        - setWeight: 20
        - pause: {}
  selector:
    matchLabels:
      app: edge-service
  template:
    metadata:
      labels:
        app: edge-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "9000"
    spec:     
      containers:
        - name: edge-service-container
          image: ghcr.io/upen28/polar-bookshop/edge-service:latest
          imagePullPolicy: Always 
          ports:
            - containerPort: 9000
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9000
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9000
            initialDelaySeconds: 15
            periodSeconds: 30 
          volumeMounts:
          - name: edge-configmap-volume
            mountPath: /workspace/config   
      volumes:
      - name: edge-configmap-volume
        configMap:
            name: edge-configmap         
---
apiVersion: v1
kind: Service
metadata:
  name: edge-service-stable
  labels:
    app: edge-service-stable
spec:
  selector:
    app: edge-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000

---
apiVersion: v1
kind: Service
metadata:
  name: edge-service-canary
  labels:
    app: edge-service-canary
spec:
  selector:
    app: edge-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000

